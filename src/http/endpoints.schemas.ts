/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Migos | API Specs
 * API documentation for Migos
 * OpenAPI spec version: 0.0.0
 */
export type GetInvitesInviteId500Message =
  (typeof GetInvitesInviteId500Message)[keyof typeof GetInvitesInviteId500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetInvitesInviteId500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetInvitesInviteId500 = {
  message: GetInvitesInviteId500Message
}

export type GetInvitesInviteId401Message =
  (typeof GetInvitesInviteId401Message)[keyof typeof GetInvitesInviteId401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetInvitesInviteId401Message = {
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
} as const

export type GetInvitesInviteId401 = {
  message: GetInvitesInviteId401Message
}

export type GetInvitesInviteId400Message =
  (typeof GetInvitesInviteId400Message)[keyof typeof GetInvitesInviteId400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetInvitesInviteId400Message = {
  Invite_not_found: 'Invite not found',
  Validation_error: 'Validation error',
} as const

export type GetInvitesInviteId400Errors = {
  inviteId?: string[]
}

export type GetInvitesInviteId400 = {
  errors?: GetInvitesInviteId400Errors
  message: GetInvitesInviteId400Message
}

export type GetInvitesInviteId200Message =
  (typeof GetInvitesInviteId200Message)[keyof typeof GetInvitesInviteId200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetInvitesInviteId200Message = {
  Invite_details_fetched_successfully: 'Invite details fetched successfully',
} as const

export type GetInvitesInviteId200InviteStatus =
  (typeof GetInvitesInviteId200InviteStatus)[keyof typeof GetInvitesInviteId200InviteStatus]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetInvitesInviteId200InviteStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
} as const

export type GetInvitesInviteId200Invite = {
  createdAt: string
  /** @nullable */
  email: string | null
  groupId: string
  id: string
  inviterId: string
  status: GetInvitesInviteId200InviteStatus
  updatedAt: string
}

export type GetInvitesInviteId200 = {
  invite: GetInvitesInviteId200Invite
  message: GetInvitesInviteId200Message
}

export type GetPendingInvites500Message =
  (typeof GetPendingInvites500Message)[keyof typeof GetPendingInvites500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetPendingInvites500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetPendingInvites500 = {
  message: GetPendingInvites500Message
}

export type GetPendingInvites401Message =
  (typeof GetPendingInvites401Message)[keyof typeof GetPendingInvites401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetPendingInvites401Message = {
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
} as const

export type GetPendingInvites401 = {
  message: GetPendingInvites401Message
}

export type GetPendingInvites400Message =
  (typeof GetPendingInvites400Message)[keyof typeof GetPendingInvites400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetPendingInvites400Message = {
  User_not_found: 'User not found',
} as const

export type GetPendingInvites400 = {
  message: GetPendingInvites400Message
}

export type GetPendingInvites200Message =
  (typeof GetPendingInvites200Message)[keyof typeof GetPendingInvites200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetPendingInvites200Message = {
  Pending_invites_fetched_successfully: 'Pending invites fetched successfully',
} as const

export type GetPendingInvites200InvitesItemStatus =
  (typeof GetPendingInvites200InvitesItemStatus)[keyof typeof GetPendingInvites200InvitesItemStatus]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetPendingInvites200InvitesItemStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
} as const

export type GetPendingInvites200InvitesItem = {
  createdAt: string
  /** @nullable */
  email: string | null
  groupId: string
  id: string
  inviterId: string
  status: GetPendingInvites200InvitesItemStatus
  updatedAt: string
}

export type GetPendingInvites200 = {
  invites: GetPendingInvites200InvitesItem[]
  message: GetPendingInvites200Message
}

export type PostGroupsGroupIdInvitesInviteIdRevoke500Message =
  (typeof PostGroupsGroupIdInvitesInviteIdRevoke500Message)[keyof typeof PostGroupsGroupIdInvitesInviteIdRevoke500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroupsGroupIdInvitesInviteIdRevoke500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PostGroupsGroupIdInvitesInviteIdRevoke500 = {
  message: PostGroupsGroupIdInvitesInviteIdRevoke500Message
}

export type PostGroupsGroupIdInvitesInviteIdRevoke401Message =
  (typeof PostGroupsGroupIdInvitesInviteIdRevoke401Message)[keyof typeof PostGroupsGroupIdInvitesInviteIdRevoke401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroupsGroupIdInvitesInviteIdRevoke401Message = {
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
} as const

export type PostGroupsGroupIdInvitesInviteIdRevoke401 = {
  message: PostGroupsGroupIdInvitesInviteIdRevoke401Message
}

export type PostGroupsGroupIdInvitesInviteIdRevoke400Message =
  (typeof PostGroupsGroupIdInvitesInviteIdRevoke400Message)[keyof typeof PostGroupsGroupIdInvitesInviteIdRevoke400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroupsGroupIdInvitesInviteIdRevoke400Message = {
  "You're_not_allowed_to_revoke_invites":
    "You're not allowed to revoke invites",
  Invite_not_found_or_already_accepted: 'Invite not found or already accepted',
} as const

export type PostGroupsGroupIdInvitesInviteIdRevoke400 = {
  message: PostGroupsGroupIdInvitesInviteIdRevoke400Message
}

export type PostGroupsGroupIdInvitesInviteIdRevoke201Message =
  (typeof PostGroupsGroupIdInvitesInviteIdRevoke201Message)[keyof typeof PostGroupsGroupIdInvitesInviteIdRevoke201Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroupsGroupIdInvitesInviteIdRevoke201Message = {
  Invite_successfully_revoked: 'Invite successfully revoked',
} as const

export type PostGroupsGroupIdInvitesInviteIdRevoke201 = {
  message: PostGroupsGroupIdInvitesInviteIdRevoke201Message
}

export type GetGroupsGroupIdInvites500Message =
  (typeof GetGroupsGroupIdInvites500Message)[keyof typeof GetGroupsGroupIdInvites500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupIdInvites500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetGroupsGroupIdInvites500 = {
  message: GetGroupsGroupIdInvites500Message
}

export type GetGroupsGroupIdInvites401Message =
  (typeof GetGroupsGroupIdInvites401Message)[keyof typeof GetGroupsGroupIdInvites401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupIdInvites401Message = {
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
} as const

export type GetGroupsGroupIdInvites401 = {
  message: GetGroupsGroupIdInvites401Message
}

export type GetGroupsGroupIdInvites400Errors = {
  groupId?: string[]
}

export type GetGroupsGroupIdInvites400 = {
  errors?: GetGroupsGroupIdInvites400Errors
  message: string
}

export type GetGroupsGroupIdInvites200Message =
  (typeof GetGroupsGroupIdInvites200Message)[keyof typeof GetGroupsGroupIdInvites200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupIdInvites200Message = {
  Invites_fetched_successfully: 'Invites fetched successfully',
} as const

export type GetGroupsGroupIdInvites200InvitesItemStatus =
  (typeof GetGroupsGroupIdInvites200InvitesItemStatus)[keyof typeof GetGroupsGroupIdInvites200InvitesItemStatus]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupIdInvites200InvitesItemStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
} as const

export type GetGroupsGroupIdInvites200InvitesItem = {
  createdAt: string
  /** @nullable */
  email: string | null
  groupId: string
  id: string
  inviterId: string
  status: GetGroupsGroupIdInvites200InvitesItemStatus
  updatedAt: string
}

export type GetGroupsGroupIdInvites200 = {
  invites: GetGroupsGroupIdInvites200InvitesItem[]
  message: GetGroupsGroupIdInvites200Message
}

export type PostInvitesInviteIdAccept500Message =
  (typeof PostInvitesInviteIdAccept500Message)[keyof typeof PostInvitesInviteIdAccept500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostInvitesInviteIdAccept500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PostInvitesInviteIdAccept500 = {
  message: PostInvitesInviteIdAccept500Message
}

export type PostInvitesInviteIdAccept401Message =
  (typeof PostInvitesInviteIdAccept401Message)[keyof typeof PostInvitesInviteIdAccept401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostInvitesInviteIdAccept401Message = {
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
} as const

export type PostInvitesInviteIdAccept401 = {
  message: PostInvitesInviteIdAccept401Message
}

export type PostInvitesInviteIdAccept400Message =
  (typeof PostInvitesInviteIdAccept400Message)[keyof typeof PostInvitesInviteIdAccept400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostInvitesInviteIdAccept400Message = {
  Invite_not_found_or_expired: 'Invite not found or expired',
  This_invite_belongs_to_another_user: 'This invite belongs to another user',
  Validation_error: 'Validation error',
} as const

export type PostInvitesInviteIdAccept400Errors = {
  inviteId?: string[]
}

export type PostInvitesInviteIdAccept400 = {
  errors?: PostInvitesInviteIdAccept400Errors
  message: PostInvitesInviteIdAccept400Message
}

export type PostInvitesInviteIdAccept201Message =
  (typeof PostInvitesInviteIdAccept201Message)[keyof typeof PostInvitesInviteIdAccept201Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostInvitesInviteIdAccept201Message = {
  Invite_accepted_successfully: 'Invite accepted successfully',
} as const

export type PostInvitesInviteIdAccept201 = {
  groupId: string
  message: PostInvitesInviteIdAccept201Message
}

export type PostGroupGroupIdInvites500Message =
  (typeof PostGroupGroupIdInvites500Message)[keyof typeof PostGroupGroupIdInvites500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroupGroupIdInvites500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PostGroupGroupIdInvites500 = {
  message: PostGroupGroupIdInvites500Message
}

export type PostGroupGroupIdInvites401Message =
  (typeof PostGroupGroupIdInvites401Message)[keyof typeof PostGroupGroupIdInvites401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroupGroupIdInvites401Message = {
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
  You_are_not_allowed_to_invite_users_to_this_group:
    'You are not allowed to invite users to this group',
} as const

export type PostGroupGroupIdInvites401 = {
  message: PostGroupGroupIdInvites401Message
}

export type PostGroupGroupIdInvites400Message =
  (typeof PostGroupGroupIdInvites400Message)[keyof typeof PostGroupGroupIdInvites400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroupGroupIdInvites400Message = {
  Validation_error: 'Validation error',
} as const

export type PostGroupGroupIdInvites400Errors = {
  email?: string[]
  groupId?: string[]
  name?: string[]
}

export type PostGroupGroupIdInvites400 = {
  errors?: PostGroupGroupIdInvites400Errors
  message: PostGroupGroupIdInvites400Message
}

export type PostGroupGroupIdInvites201Message =
  (typeof PostGroupGroupIdInvites201Message)[keyof typeof PostGroupGroupIdInvites201Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroupGroupIdInvites201Message = {
  Invite_created_successfully: 'Invite created successfully',
} as const

export type PostGroupGroupIdInvites201 = {
  email: string
  inviteId: string
  message: PostGroupGroupIdInvites201Message
  name: string
}

export type PostGroupGroupIdInvitesBody = {
  email: string
  name: string
}

export type GetGroupsGroupIdMyMatch500Message =
  (typeof GetGroupsGroupIdMyMatch500Message)[keyof typeof GetGroupsGroupIdMyMatch500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupIdMyMatch500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetGroupsGroupIdMyMatch500 = {
  message: GetGroupsGroupIdMyMatch500Message
}

export type GetGroupsGroupIdMyMatch401Message =
  (typeof GetGroupsGroupIdMyMatch401Message)[keyof typeof GetGroupsGroupIdMyMatch401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupIdMyMatch401Message = {
  You_are_not_authorized_to_view_your_match:
    'You are not authorized to view your match',
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
  "You're_not_a_member_of_this_group": "You're not a member of this group",
  Validation_error: 'Validation error',
} as const

export type GetGroupsGroupIdMyMatch401Errors = {
  groupId?: string[]
}

export type GetGroupsGroupIdMyMatch401 = {
  errors?: GetGroupsGroupIdMyMatch401Errors
  message: GetGroupsGroupIdMyMatch401Message
}

export type GetGroupsGroupIdMyMatch400Message =
  (typeof GetGroupsGroupIdMyMatch400Message)[keyof typeof GetGroupsGroupIdMyMatch400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupIdMyMatch400Message = {
  The_group_has_not_generated_any_matches_yet:
    'The group has not generated any matches yet',
} as const

export type GetGroupsGroupIdMyMatch400 = {
  message: GetGroupsGroupIdMyMatch400Message
}

export type GetGroupsGroupIdMyMatch200Message =
  (typeof GetGroupsGroupIdMyMatch200Message)[keyof typeof GetGroupsGroupIdMyMatch200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupIdMyMatch200Message = {
  Match_fetched_successfully: 'Match fetched successfully',
} as const

export type GetGroupsGroupIdMyMatch200Match = {
  /** @nullable */
  avatarUrl: string | null
  email: string
  /** @nullable */
  giftTip: string | null
  name: string
  userId: string
}

export type GetGroupsGroupIdMyMatch200 = {
  match: GetGroupsGroupIdMyMatch200Match
  message: GetGroupsGroupIdMyMatch200Message
}

export type PatchGroupsGroupIdGenerateMatches500Message =
  (typeof PatchGroupsGroupIdGenerateMatches500Message)[keyof typeof PatchGroupsGroupIdGenerateMatches500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdGenerateMatches500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PatchGroupsGroupIdGenerateMatches500 = {
  message: PatchGroupsGroupIdGenerateMatches500Message
}

export type PatchGroupsGroupIdGenerateMatches401Message =
  (typeof PatchGroupsGroupIdGenerateMatches401Message)[keyof typeof PatchGroupsGroupIdGenerateMatches401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdGenerateMatches401Message = {
  You_are_not_able_to_perform_this_action:
    'You are not able to perform this action',
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
  "You're_not_a_member_of_this_group": "You're not a member of this group",
} as const

export type PatchGroupsGroupIdGenerateMatches401 = {
  message: PatchGroupsGroupIdGenerateMatches401Message
}

export type PatchGroupsGroupIdGenerateMatches400Message =
  (typeof PatchGroupsGroupIdGenerateMatches400Message)[keyof typeof PatchGroupsGroupIdGenerateMatches400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdGenerateMatches400Message = {
  Group_must_have_at_least_2_members: 'Group must have at least 2 members',
  Number_of_members_must_be_a_even_number:
    'Number of members must be a even number',
} as const

export type PatchGroupsGroupIdGenerateMatches400 = {
  message: PatchGroupsGroupIdGenerateMatches400Message
}

export type PatchGroupsGroupIdGenerateMatches201Message =
  (typeof PatchGroupsGroupIdGenerateMatches201Message)[keyof typeof PatchGroupsGroupIdGenerateMatches201Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdGenerateMatches201Message = {
  Matches_generated_successfully: 'Matches generated successfully',
} as const

export type PatchGroupsGroupIdGenerateMatches201 = {
  message: PatchGroupsGroupIdGenerateMatches201Message
}

export type PatchGroupsGroupIdOwner500Message =
  (typeof PatchGroupsGroupIdOwner500Message)[keyof typeof PatchGroupsGroupIdOwner500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdOwner500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PatchGroupsGroupIdOwner500 = {
  message: PatchGroupsGroupIdOwner500Message
}

export type PatchGroupsGroupIdOwner401Message =
  (typeof PatchGroupsGroupIdOwner401Message)[keyof typeof PatchGroupsGroupIdOwner401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdOwner401Message = {
  You_are_not_allowed_to_transfer_ownership:
    'You are not allowed to transfer ownership',
  "You're_not_a_member_of_this_group": "You're not a member of this group",
  Group_name_is_required: 'Group name is required',
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
} as const

export type PatchGroupsGroupIdOwner401 = {
  message: PatchGroupsGroupIdOwner401Message
}

export type PatchGroupsGroupIdOwner400Errors = {
  groupId?: string[]
}

export type PatchGroupsGroupIdOwner400 = {
  errors?: PatchGroupsGroupIdOwner400Errors
  message: string
}

export type PatchGroupsGroupIdOwner200Message =
  (typeof PatchGroupsGroupIdOwner200Message)[keyof typeof PatchGroupsGroupIdOwner200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdOwner200Message = {
  Group_ownership_transferred_successfully:
    'Group ownership transferred successfully',
} as const

export type PatchGroupsGroupIdOwner200 = {
  message: PatchGroupsGroupIdOwner200Message
}

export type PatchGroupsGroupIdDescription500Message =
  (typeof PatchGroupsGroupIdDescription500Message)[keyof typeof PatchGroupsGroupIdDescription500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdDescription500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PatchGroupsGroupIdDescription500 = {
  message: PatchGroupsGroupIdDescription500Message
}

export type PatchGroupsGroupIdDescription401Message =
  (typeof PatchGroupsGroupIdDescription401Message)[keyof typeof PatchGroupsGroupIdDescription401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdDescription401Message = {
  You_are_not_allowed_to_update_this_group_description:
    'You are not allowed to update this group description',
  "You're_not_a_member_of_this_group": "You're not a member of this group",
  Group_name_is_required: 'Group name is required',
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
} as const

export type PatchGroupsGroupIdDescription401 = {
  message: PatchGroupsGroupIdDescription401Message
}

export type PatchGroupsGroupIdDescription400Errors = {
  description?: string[]
  groupId?: string[]
}

export type PatchGroupsGroupIdDescription400 = {
  errors?: PatchGroupsGroupIdDescription400Errors
  message: string
}

export type PatchGroupsGroupIdDescription200Message =
  (typeof PatchGroupsGroupIdDescription200Message)[keyof typeof PatchGroupsGroupIdDescription200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchGroupsGroupIdDescription200Message = {
  Group_description_updated_successfully:
    'Group description updated successfully',
} as const

export type PatchGroupsGroupIdDescription200 = {
  message: PatchGroupsGroupIdDescription200Message
}

export type PatchGroupsGroupIdDescriptionBody = {
  description: string
}

export type GetGroupsGroupId500Message =
  (typeof GetGroupsGroupId500Message)[keyof typeof GetGroupsGroupId500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupId500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetGroupsGroupId500 = {
  message: GetGroupsGroupId500Message
}

export type GetGroupsGroupId401Message =
  (typeof GetGroupsGroupId401Message)[keyof typeof GetGroupsGroupId401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupId401Message = {
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
  "You're_not_a_member_of_this_group": "You're not a member of this group",
} as const

export type GetGroupsGroupId401 = {
  message: GetGroupsGroupId401Message
}

export type GetGroupsGroupId400Errors = {
  groupId?: string[]
}

export type GetGroupsGroupId400 = {
  errors?: GetGroupsGroupId400Errors
  message: string
}

export type GetGroupsGroupId200Message =
  (typeof GetGroupsGroupId200Message)[keyof typeof GetGroupsGroupId200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroupsGroupId200Message = {
  Group_fetched_successfully: 'Group fetched successfully',
} as const

export type GetGroupsGroupId200GroupMembersItem = {
  /** @nullable */
  avatarUrl?: string | null
  email: string
  id: string
  name: string
}

export type GetGroupsGroupId200Group = {
  /** @nullable */
  avatarUrl?: string | null
  /** @nullable */
  budget: string | null
  createdAt: string
  /** @nullable */
  description?: string | null
  /** @nullable */
  drawDate?: string | null
  endDate: string
  id: string
  members: GetGroupsGroupId200GroupMembersItem[]
  membersCount: number
  name: string
  ownerId: string
  timesMatchesGenerated: number
  updatedAt: string
}

export type GetGroupsGroupId200 = {
  group: GetGroupsGroupId200Group
  message: GetGroupsGroupId200Message
}

export type DeleteGroupsGroupId500 = {
  message: string
}

export type DeleteGroupsGroupId401Message =
  (typeof DeleteGroupsGroupId401Message)[keyof typeof DeleteGroupsGroupId401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteGroupsGroupId401Message = {
  You_are_not_allowed_to_delete_this_group:
    'You are not allowed to delete this group',
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
  "You're_not_a_member_of_this_group": "You're not a member of this group",
} as const

export type DeleteGroupsGroupId401 = {
  message: DeleteGroupsGroupId401Message
}

export type DeleteGroupsGroupId400Errors = {
  groupId?: string[]
}

export type DeleteGroupsGroupId400 = {
  errors?: DeleteGroupsGroupId400Errors
  message: string
}

export type DeleteGroupsGroupId200Message =
  (typeof DeleteGroupsGroupId200Message)[keyof typeof DeleteGroupsGroupId200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeleteGroupsGroupId200Message = {
  Group_deleted_successfully: 'Group deleted successfully',
} as const

export type DeleteGroupsGroupId200 = {
  message: DeleteGroupsGroupId200Message
}

export type GetGroups500Message =
  (typeof GetGroups500Message)[keyof typeof GetGroups500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroups500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetGroups500 = {
  message: GetGroups500Message
}

export type GetGroups401Message =
  (typeof GetGroups401Message)[keyof typeof GetGroups401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroups401Message = {
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
} as const

export type GetGroups401 = {
  message: GetGroups401Message
}

export type GetGroups200Message =
  (typeof GetGroups200Message)[keyof typeof GetGroups200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroups200Message = {
  Groups_fetched_successfully: 'Groups fetched successfully',
} as const

export type GetGroups200GroupsItemRole =
  (typeof GetGroups200GroupsItemRole)[keyof typeof GetGroups200GroupsItemRole]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetGroups200GroupsItemRole = {
  ADMIN: 'ADMIN',
  MEMBER: 'MEMBER',
} as const

export type GetGroups200GroupsItem = {
  /** @nullable */
  avatarUrl: string | null
  /** @nullable */
  budget: string | null
  createdAt: string
  /** @nullable */
  description: string | null
  /** @nullable */
  drawDate?: string | null
  /** @nullable */
  endDate?: string | null
  id: string
  isMember: boolean
  isOwner: boolean
  name: string
  ownerId: string
  role: GetGroups200GroupsItemRole
  updatedAt: string
}

export type GetGroups200 = {
  groups: GetGroups200GroupsItem[]
  message: GetGroups200Message
}

export type GetGroupsParams = {
  page?: number
}

export type PostGroups500Message =
  (typeof PostGroups500Message)[keyof typeof PostGroups500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroups500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PostGroups500 = {
  message: PostGroups500Message
}

export type PostGroups401Message =
  (typeof PostGroups401Message)[keyof typeof PostGroups401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroups401Message = {
  Missing_auth_token: 'Missing auth token',
  Invalid_token: 'Invalid token',
} as const

export type PostGroups401 = {
  message: PostGroups401Message
}

export type PostGroups400Errors = {
  avatarUrl?: string[]
  budget?: string[]
  description?: string[]
  drawDate?: string[]
  endDate?: string[]
  name?: string[]
}

export type PostGroups400 = {
  errors?: PostGroups400Errors
  message: string
}

export type PostGroups201Message =
  (typeof PostGroups201Message)[keyof typeof PostGroups201Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGroups201Message = {
  Group_created_successfully: 'Group created successfully',
} as const

export type PostGroups201 = {
  id: string
  message: PostGroups201Message
}

export type PostGroupsBody = {
  avatarUrl?: string
  budget: number
  description?: string
  drawDate: string
  endDate: string
  name: string
}

export type GetUsersUserId500Message =
  (typeof GetUsersUserId500Message)[keyof typeof GetUsersUserId500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersUserId500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetUsersUserId500 = {
  message: GetUsersUserId500Message
}

export type GetUsersUserId404Message =
  (typeof GetUsersUserId404Message)[keyof typeof GetUsersUserId404Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersUserId404Message = {
  User_not_found: 'User not found',
} as const

export type GetUsersUserId404 = {
  message: GetUsersUserId404Message
}

export type GetUsersUserId401Message =
  (typeof GetUsersUserId401Message)[keyof typeof GetUsersUserId401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersUserId401Message = {
  Missing_auth_token: 'Missing auth token.',
  Invalid_token: 'Invalid token.',
} as const

export type GetUsersUserId401 = {
  message: GetUsersUserId401Message
}

export type GetUsersUserId400Message =
  (typeof GetUsersUserId400Message)[keyof typeof GetUsersUserId400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersUserId400Message = {
  Invalid_user_id: 'Invalid user id.',
} as const

export type GetUsersUserId400Error = {
  userId?: string[]
}

export type GetUsersUserId400 = {
  error: GetUsersUserId400Error
  message: GetUsersUserId400Message
}

export type GetUsersUserId200User = {
  /** @nullable */
  avatarUrl: string | null
  createdAt: string
  email: string
  id: string
  name: string
  updatedAt: string
}

export type GetUsersUserId200Message =
  (typeof GetUsersUserId200Message)[keyof typeof GetUsersUserId200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersUserId200Message = {
  User_found: 'User found',
} as const

export type GetUsersUserId200 = {
  message: GetUsersUserId200Message
  user: GetUsersUserId200User
}

export type GetMe500Message =
  (typeof GetMe500Message)[keyof typeof GetMe500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetMe500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetMe500 = {
  message: GetMe500Message
}

export type GetMe404Message =
  (typeof GetMe404Message)[keyof typeof GetMe404Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetMe404Message = {
  User_not_found: 'User not found',
} as const

export type GetMe404 = {
  message: GetMe404Message
}

export type GetMe401Message =
  (typeof GetMe401Message)[keyof typeof GetMe401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetMe401Message = {
  Missing_auth_token: 'Missing auth token.',
  Invalid_token: 'Invalid token.',
} as const

export type GetMe401 = {
  message: GetMe401Message
}

export type GetMe200User = {
  /** @nullable */
  avatarUrl: string | null
  createdAt: string
  email: string
  id: string
  name: string
  updatedAt: string
}

export type GetMe200Message =
  (typeof GetMe200Message)[keyof typeof GetMe200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetMe200Message = {
  User_found: 'User found',
} as const

export type GetMe200 = {
  message: GetMe200Message
  user: GetMe200User
}

export type PostUsersPreRegister500Message =
  (typeof PostUsersPreRegister500Message)[keyof typeof PostUsersPreRegister500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsersPreRegister500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PostUsersPreRegister500 = {
  message: PostUsersPreRegister500Message
}

export type PostUsersPreRegister400Message =
  (typeof PostUsersPreRegister400Message)[keyof typeof PostUsersPreRegister400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsersPreRegister400Message = {
  User_already_exists: 'User already exists',
} as const

export type PostUsersPreRegister400 = {
  message: PostUsersPreRegister400Message
}

export type PostUsersPreRegister201Message =
  (typeof PostUsersPreRegister201Message)[keyof typeof PostUsersPreRegister201Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsersPreRegister201Message = {
  'User_pre-registered_successfully': 'User pre-registered successfully',
} as const

export type PostUsersPreRegister201 = {
  message: PostUsersPreRegister201Message
}

export type PostUsersPreRegisterBodyLanguage =
  (typeof PostUsersPreRegisterBodyLanguage)[keyof typeof PostUsersPreRegisterBodyLanguage]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsersPreRegisterBodyLanguage = {
  'en-US': 'en-US',
  'pt-BR': 'pt-BR',
  'es-ES': 'es-ES',
} as const

export type PostUsersPreRegisterBody = {
  email: string
  language: PostUsersPreRegisterBodyLanguage
}

export type GetAuthenticateGoogle500Message =
  (typeof GetAuthenticateGoogle500Message)[keyof typeof GetAuthenticateGoogle500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetAuthenticateGoogle500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetAuthenticateGoogle500 = {
  message: GetAuthenticateGoogle500Message
}

export type GetAuthenticateGoogle400Message =
  (typeof GetAuthenticateGoogle400Message)[keyof typeof GetAuthenticateGoogle400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetAuthenticateGoogle400Message = {
  User_info_not_found: 'User info not found',
  User_not_found: 'User not found',
  Invalid_or_expired_authorization_code:
    'Invalid or expired authorization code',
  Validation_error: 'Validation error',
} as const

export type GetAuthenticateGoogle400Errors = {
  code?: string[]
}

export type GetAuthenticateGoogle400 = {
  errors?: GetAuthenticateGoogle400Errors
  message: GetAuthenticateGoogle400Message
}

export type GetAuthenticateGoogle200Message =
  (typeof GetAuthenticateGoogle200Message)[keyof typeof GetAuthenticateGoogle200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetAuthenticateGoogle200Message = {
  Authenticated_successfully: 'Authenticated successfully',
} as const

export type GetAuthenticateGoogle200 = {
  message: GetAuthenticateGoogle200Message
  token: string
}

export type GetAuthenticateGoogleParams = {
  code: string
}

export type PostAuthenticatePassword500Message =
  (typeof PostAuthenticatePassword500Message)[keyof typeof PostAuthenticatePassword500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostAuthenticatePassword500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PostAuthenticatePassword500 = {
  message: PostAuthenticatePassword500Message
}

export type PostAuthenticatePassword401Message =
  (typeof PostAuthenticatePassword401Message)[keyof typeof PostAuthenticatePassword401Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostAuthenticatePassword401Message = {
  Invalid_credentials: 'Invalid credentials',
  Validation_error: 'Validation error',
} as const

export type PostAuthenticatePassword401ErrorsPasswordItem =
  (typeof PostAuthenticatePassword401ErrorsPasswordItem)[keyof typeof PostAuthenticatePassword401ErrorsPasswordItem]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostAuthenticatePassword401ErrorsPasswordItem = {
  Password_must_be_at_least_8_characters_long:
    'Password must be at least 8 characters long',
} as const

export type PostAuthenticatePassword401ErrorsEmailItem =
  (typeof PostAuthenticatePassword401ErrorsEmailItem)[keyof typeof PostAuthenticatePassword401ErrorsEmailItem]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostAuthenticatePassword401ErrorsEmailItem = {
  Invalid_email: 'Invalid email',
} as const

export type PostAuthenticatePassword401Errors = {
  email?: PostAuthenticatePassword401ErrorsEmailItem[]
  password?: PostAuthenticatePassword401ErrorsPasswordItem[]
}

export type PostAuthenticatePassword401 = {
  errors?: PostAuthenticatePassword401Errors
  message: PostAuthenticatePassword401Message
}

export type PostAuthenticatePassword200Message =
  (typeof PostAuthenticatePassword200Message)[keyof typeof PostAuthenticatePassword200Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostAuthenticatePassword200Message = {
  Authenticated_successfully: 'Authenticated successfully',
} as const

export type PostAuthenticatePassword200 = {
  message: PostAuthenticatePassword200Message
  token: string
}

export type PostAuthenticatePasswordBody = {
  email: string
  /** @minLength 8 */
  password: string
}

export type GetUsersGoogle500Message =
  (typeof GetUsersGoogle500Message)[keyof typeof GetUsersGoogle500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersGoogle500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type GetUsersGoogle500 = {
  message: GetUsersGoogle500Message
}

export type GetUsersGoogle400Message =
  (typeof GetUsersGoogle400Message)[keyof typeof GetUsersGoogle400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersGoogle400Message = {
  User_info_not_found: 'User info not found',
  Invalid_or_expired_authorization_code:
    'Invalid or expired authorization code',
  Validation_error: 'Validation error',
} as const

export type GetUsersGoogle400Errors = {
  code?: string[]
}

export type GetUsersGoogle400 = {
  errors?: GetUsersGoogle400Errors
  message: GetUsersGoogle400Message
}

export type GetUsersGoogle201Message =
  (typeof GetUsersGoogle201Message)[keyof typeof GetUsersGoogle201Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersGoogle201Message = {
  User_created_successfully: 'User created successfully',
} as const

export type GetUsersGoogle201 = {
  message: GetUsersGoogle201Message
}

export type GetUsersGoogleParams = {
  code: string
}

export type PostUsers500Message =
  (typeof PostUsers500Message)[keyof typeof PostUsers500Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsers500Message = {
  Internal_server_error: 'Internal server error',
} as const

export type PostUsers500 = {
  message: PostUsers500Message
}

export type PostUsers400Message =
  (typeof PostUsers400Message)[keyof typeof PostUsers400Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsers400Message = {
  Validation_error: 'Validation error',
  User_with_same_email_already_exists: 'User with same email already exists',
} as const

export type PostUsers400ErrorsUsernameItem =
  (typeof PostUsers400ErrorsUsernameItem)[keyof typeof PostUsers400ErrorsUsernameItem]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsers400ErrorsUsernameItem = {
  Username_is_required: 'Username is required',
} as const

export type PostUsers400ErrorsPasswordItem =
  (typeof PostUsers400ErrorsPasswordItem)[keyof typeof PostUsers400ErrorsPasswordItem]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsers400ErrorsPasswordItem = {
  Password_must_be_at_least_8_characters_long:
    'Password must be at least 8 characters long',
} as const

export type PostUsers400ErrorsNameItem =
  (typeof PostUsers400ErrorsNameItem)[keyof typeof PostUsers400ErrorsNameItem]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsers400ErrorsNameItem = {
  Name_is_required: 'Name is required',
} as const

export type PostUsers400ErrorsEmailItem =
  (typeof PostUsers400ErrorsEmailItem)[keyof typeof PostUsers400ErrorsEmailItem]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsers400ErrorsEmailItem = {
  Invalid_email: 'Invalid email',
} as const

export type PostUsers400Errors = {
  email?: PostUsers400ErrorsEmailItem[]
  name?: PostUsers400ErrorsNameItem[]
  password?: PostUsers400ErrorsPasswordItem[]
  username?: PostUsers400ErrorsUsernameItem[]
}

export type PostUsers400 = {
  errors?: PostUsers400Errors
  message: PostUsers400Message
}

export type PostUsers201Message =
  (typeof PostUsers201Message)[keyof typeof PostUsers201Message]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostUsers201Message = {
  User_created_successfully: 'User created successfully',
} as const

export type PostUsers201 = {
  message: PostUsers201Message
}

export type PostUsersBody = {
  /** @minLength 1 */
  email: string
  /** @minLength 1 */
  name: string
  /** @minLength 8 */
  password: string
  /** @minLength 1 */
  username: string
}
